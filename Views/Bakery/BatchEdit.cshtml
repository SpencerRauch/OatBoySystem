@model Batch
@{
    ViewData["Title"] = Model.Recipe.Name;
}
<div class="container text-center">
    <h1>Batch Admin</h1>
    <p>@Model.Recipe?.Name @Model.BatchId</p>
    <form class="d-flex align-items-center gap-3" asp-action="BatchStatusUpdate" asp-controller="Bakery" asp-route-bId="@Model.BatchId">
        <label >Status:</label>
        <select name="status">
            @foreach (KeyValuePair<int,string> kvp in ViewBag.Statuses)
            {
                if (kvp.Key == Model.Status)
                {
                    <option value="@kvp.Key" selected>@kvp.Value</option>
                } else 
                {
                    <option value="@kvp.Key" >@kvp.Value</option>
                }
            }
        </select>
        <button class="btn btn-primary">Update</button>
    </form>

    @foreach (RecipeBakingMaterialAssociation rbma in Model.Recipe.BakingMaterialAssociations)
    {
        List<BatchBakingMaterialStockAssociation> matched = Model.BakingMaterialStockAssociations.Where(bmsa => bmsa.BakingMaterialStock.BakingMaterialId == rbma.BakingMaterialId).ToList();
        int added = matched.Sum(bmsa => bmsa.Quantity );
        int needed = rbma.Quantity - added;
        List<BakingMaterialStock> AllStock = ViewBag.CurrentStock;
        List<BakingMaterialStock> corelated = AllStock.Where(bms=> bms.BakingMaterialId == rbma.BakingMaterialId).ToList();
        
        <p class="text-start mt-3">@rbma.BakingMaterial.Name @added / @rbma.Quantity @rbma.BakingMaterial.UnitOfMeasure.ToUpper() filled </p>
        <div class="container">
            @foreach (BatchBakingMaterialStockAssociation bbmsa in matched)
            {
                <div class="d-flex justify-content-center align-items-center gap-2 mb-5">

                <label>@bbmsa.BakingMaterialStock.Brand (@bbmsa.BakingMaterialStock.Batch) -- @bbmsa.Quantity @rbma.BakingMaterial.UnitOfMeasure.ToUpper()</label>
                <form asp-action="BatchRemoveStock" asp-controller="Bakery" method="Post" asp-route-batchId="@Model.BatchId" asp-route-bbmsaId="@bbmsa.BatchBakingMaterialStockAssociationId">
                    <button class="btn btn-danger">X</button>
                </form>
                </div>
            }

            <div>
                @if (corelated.Count > 0 )
                {   
                    if (needed > 0)
                    {
                        @await Html.PartialAsync("_BatchAddStockForm", new BatchAddStockForm(){BatchId=Model.BatchId, RelatedStock=corelated,Needed=needed});
                    }
                    else
                    {
                        <p>Item filled</p>
                    }
                } else {
                    <p>No stock available</p>
                }
            </div>
        </div>
    }
    <div class="my-5">üòç</div>
</div>